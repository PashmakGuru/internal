name: Sync Terraform Cloud
on:
  push:
    branches:
    - 'main'
    paths:
      - 'essentials/terraform-cloud/**'
      - '.github/workflows/terraform-cloud.yaml'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
    - 'main'
    paths:
      - 'essentials/terraform-cloud/**'
      - '.github/workflows/terraform-cloud.yaml'


env:
    TF_API_TOKEN: ${{ secrets.TFC_API_TOKEN }}
    TF_ORGANIZATION: ${{ vars.TFC_ORGANIZATION }}-bootstrap
    TF_WORKSPACE: remote-operations

    SYNC_TF_CONFIG_DIRECTORY: ./essentials/terraform-cloud
    SYNC_TF_VARS: |
        {
            tfc_api_token       = "${{ secrets.TFC_API_TOKEN }}"
            organization_name   = "${{ vars.TFC_ORGANIZATION }}"
            organization_email  = "${{ vars.TFC_ORGANIZATION_EMAIL }}"
        }

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout source code
      - name: Prepare Variables
        run: echo $TF_VARS > ${{ env.SYNC_TF_CONFIG_DIRECTORY }}/terraform.tfvars
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.SYNC_TF_CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}
